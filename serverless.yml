service: mpc-party2-serverless
frameworkVersion: "3"

custom:
  tableName: "${sls:stage}_Party1MasterKey"
  # customDomain:
  #   domainName: p2.boom.fan
  #   certificateName: '*.boom.fan'
  #   createRoute53Record: true
  #   createRoute53IPv6Record: true
  #   endpointType: 'regional'
  #   securityPolicy: tls_1_2
  #   apiType: http
  #   autoDomain: true

# plugins:
#   - serverless-domain-manager

provider:
  name: aws
  timeout: 15
  endpointType: PRIVATE
  #TODO these should not be hard coded
  vpcEndpointIds:
    - vpce-0c016030d054a6b25
  vpc:
    securityGroupIds:
      - sg-0e23d8063cee9fc7a
    subnetIds:
      - subnet-08f2dc7b96e549323
      # - subnet-07bd9399c03e2ae09
  ecr:
    images:
      party2_server:
        path: ./
        platform: linux/amd64
  region: ap-south-1
  deploymentMethod: direct
  tracing:
    # Can only be true if API Gateway is inside a stack.
    apiGateway: true
    # Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'
    lambda: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:*:*:table/${sls:stage}-party2-secrets"
        - Effect: Allow
          Action:
            - kms:GenerateDataKey
            - kms:Decrypt
          Resource:
            - "arn:aws:kms:*:*:key/ffcd187a-801a-4991-9a3a-f0370be7eefe"
        - Effect: Allow
          Action:
            - execute-api:Invoke
          Resource:
            - "arn:aws:execute-api:ap-south-1:*:5edb7ygj70/*"
  environment:
    USERS_TABLE: ${self:custom.tableName}
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource:
          - execute-api:/*/*/*

functions:
  api:
    image:
      name: party2_server
      command:
        - dist/src/startParty2.handler
    events:
      # - httpApi: '*'
      - http: GET /health
      - http: POST /sign
      - http: POST /generateKey
      - http: POST /fetchPublicKey

    environment:
      #TODO this id should not be hard coded
      P1_ENDPOINT: https://5kfdm8mbl2.execute-api.ap-south-1.amazonaws.com/dev

resources:
  Resources:
    # VPCEndpoint:
    #   Type: AWS::EC2::VPCEndpoint
    #   Properties:
    #     PolicyDocument: {}
    #     PrivateDnsEnabled: True
    #     SecurityGroupIds:
    #       - sg-0e23d8063cee9fc7a
    #       - sg-0b1f66d9b3511abb9
    #     SubnetIds:
    #       - subnet-08f2dc7b96e549323
    #       - subnet-07bd9399c03e2ae09
    #     VpcId: vpc-0080d67ade82e5b42
    #     VpcEndpointType: Interface
    Party2Secrets:
      Type: AWS::DynamoDB::Table
      Properties:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: version
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: version
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: "${sls:stage}-party2-secrets"