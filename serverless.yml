service: mpc-party2-serverless
frameworkVersion: "3"

custom:
  tableName: "${sls:stage}_Party1MasterKey"
  customDomain:
    domainName: p2.boom.fan
    certificateName: '*.boom.fan'
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2
    apiType: http
    autoDomain: true

plugins:
  - serverless-domain-manager

provider:
  name: aws
  timeout: 15
  httpApi:
    disableDefaultEndpoint: true
  ecr:
    images:
      party2_server:
        path: ./
        platform: linux/amd64
  region: ap-south-1
  deploymentMethod: direct
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:*:*:table/${sls:stage}-party2-secrets"
        - Effect: Allow
          Action:
            - kms:GenerateDataKey
            - kms:Decrypt
          Resource:
            - "arn:aws:kms:*:*:key/ffcd187a-801a-4991-9a3a-f0370be7eefe"
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  api:
    image:
      name: party2_server
      command:
        - dist/src/startParty2.handler
    events:
      - httpApi: '*'
    environment:
      P1_ENDPOINT: https://p1.boom.fan/

resources:
  Resources:
    Party2Secrets:
      Type: AWS::DynamoDB::Table
      Properties:
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: version
            KeyType: RANGE
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: version
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TableName: "${sls:stage}-party2-secrets"